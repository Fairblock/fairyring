syntax = "proto3";
package fairyring.keyshare;

import "google/protobuf/duration.proto";
import "gogoproto/gogo.proto";
import "fairyring/common/shared_types.proto";

option go_package = "github.com/Fairblock/fairyring/x/keyshare/types";

// KeysharePacketData defines all the packet types of the keyshare module
message KeysharePacketData {
    // packet can be one of the following types
    oneof packet {
        NoData                                no_data                               = 1;
        RequestDecryptionKeyPacketData        request_decryption_key_packet         = 2;
        GetDecryptionKeyPacketData            get_decryption_key_packet             = 3;
        DecryptionKeyDataPacketData           decryption_key_data_packet            = 4;
        PrivateDecryptionKeyDataPacketData    private_decryption_key_data_packet    = 5;
        CurrentKeysPacketData                 current_keys_packet                   = 6;
        RequestPrivateDecryptionKeyPacketData request_private_decryption_key_packet = 7;
        GetPrivateDecryptionKeyPacketData     get_private_decryption_key_packet     = 8;
    }
}

// NoData defines a blank packet
message NoData {
}


// RequestDecryptionKeyPacketData defines a struct for the packet payload
message RequestDecryptionKeyPacketData {
  string requester = 1;
  // id can either be a request id or a proposal id
  oneof id {
    string proposal_id = 2;
    string identity = 3;
  }
  google.protobuf.Duration estimated_delay = 4 [(gogoproto.stdduration) = true];
}

// RequestPrivateDecryptionKeyPacketData defines a struct for the packet payload
message RequestPrivateDecryptionKeyPacketData {
    string requester = 1;
    string identity = 2;
}

// RequestPrivateDecryptionKeyPacketAck defines a struct for the packet acknowledgment
message RequestPrivateDecryptionKeyPacketAck {
    string identity = 1;
    string pubkey   = 2;
}

// RequestDecryptionKeyPacketAck defines a struct for the packet acknowledgment
message RequestDecryptionKeyPacketAck {
    string identity = 1;
    string pubkey   = 2;
}

// GetDecryptionKeyPacketData defines a struct for the packet payload
message GetDecryptionKeyPacketData {
    string identity = 1;
}

// GetDecryptionKeyPacketAck defines a struct for the packet acknowledgment
message GetDecryptionKeyPacketAck {}

// GetPrivateDecryptionKeyPacketData defines a struct for the packet payload
message GetPrivateDecryptionKeyPacketData {
    string identity = 1;
    string requester = 2;
    string secp_pubkey = 3;
}

// GetPrivateKeysharePacketAck defines a struct for the packet acknowledgment
message GetPrivateDecryptionKeyPacketAck {}

// DecryptionKeyDataPacketData defines a struct for the packet payload
message DecryptionKeyDataPacketData {
    string identity       = 1;
    string pubkey         = 2;
    string decryption_key = 3;
    string aggr_height    = 4;
    string proposal_id    = 5; // used for private governance
    uint64 retries        = 6;
}

// DecryptionKeyPacketAck defines a struct for the packet acknowledgment
message DecryptionKeyPacketAck {}


// PrivateDecryptionKeyDataPacketData defines a struct for the packet payload
message PrivateDecryptionKeyDataPacketData {
    string identity      = 1;
    string pubkey        = 2;
    repeated fairyring.common.PrivateDecryptionKey private_decryption_key = 4;
}

// PrivateDecryptionKeyPacketAck defines a struct for the packet payload
message PrivateDecryptionKeyPacketAck{}

// CurrentKeysPacketData defines a struct for the packet payload
message CurrentKeysPacketData {
}

// CurrentKeysPacketAck defines a struct for the packet acknowledgment
message CurrentKeysPacketAck {
    fairyring.common.ActivePublicKey active_key = 1;
    fairyring.common.QueuedPublicKey queued_key = 2;
}