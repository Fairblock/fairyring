syntax = "proto3";

package fairyring.keyshare;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "fairyring/keyshare/params.proto";
import "fairyring/keyshare/validator_set.proto";
import "fairyring/keyshare/key_share.proto";
import "fairyring/keyshare/aggregated_key_share.proto";
import "fairyring/keyshare/pub_key.proto";
import "fairyring/keyshare/authorized_address.proto";
import "fairyring/keyshare/general_key_share.proto";
import "fairyring/keyshare/commitments.proto";

// this line is used by starport scaffolding # 1

option go_package = "github.com/Fairblock/fairyring/x/keyshare/types";

// Query defines the gRPC querier service.
service Query {

  rpc Commitments (QueryCommitmentsRequest) returns (QueryCommitmentsResponse) {
    option (google.api.http).get = "/fairyring/keyshare/commitments";
  }
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/fairyring/keyshare/params";
  
  }
  
  // Queries a ValidatorSet by index.
  rpc ValidatorSet (QueryGetValidatorSetRequest) returns (QueryGetValidatorSetResponse) {
    option (google.api.http).get = "/fairyring/keyshare/validator_set/{index}";
  
  }
  
  // Queries a list of ValidatorSet items.
  rpc ValidatorSetAll (QueryAllValidatorSetRequest) returns (QueryAllValidatorSetResponse) {
    option (google.api.http).get = "/fairyring/keyshare/validator_set";
  
  }
  
  // Queries a KeyShare by index.
  rpc KeyShare (QueryGetKeyShareRequest) returns (QueryGetKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/key_share/{validator}/{blockHeight}";
  
  }
  
  // Queries a list of KeyShare items.
  rpc KeyShareAll (QueryAllKeyShareRequest) returns (QueryAllKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/key_share";
  
  }

  // this line is used by starport scaffolding # 2
  
  // Queries a list of AggregatedKeyShare items.
  rpc AggregatedKeyShare    (QueryGetAggregatedKeyShareRequest) returns (QueryGetAggregatedKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/aggregated_key_share/{height}";
  
  }
  rpc AggregatedKeyShareAll (QueryAllAggregatedKeyShareRequest) returns (QueryAllAggregatedKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/aggregated_key_share";
  
  }
  
  // Queries the public keys
  rpc PubKey (QueryPubKeyRequest) returns (QueryPubKeyResponse) {
    option (google.api.http).get = "/fairyring/keyshare/pub_key";
  
  }
  
  // Queries a list of AuthorizedAddress items.
  rpc AuthorizedAddress    (QueryGetAuthorizedAddressRequest) returns (QueryGetAuthorizedAddressResponse) {
    option (google.api.http).get = "/fairyring/keyshare/authorized_address/{target}";
  
  }
  rpc AuthorizedAddressAll (QueryAllAuthorizedAddressRequest) returns (QueryAllAuthorizedAddressResponse) {
    option (google.api.http).get = "/fairyring/keyshare/authorized_address";
  
  }
  
  // Queries a list of GeneralKeyShare items.
  rpc GeneralKeyShare    (QueryGetGeneralKeyShareRequest) returns (QueryGetGeneralKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/general_key_share/{validator}/{idType}/{idValue}";
  
  }
  rpc GeneralKeyShareAll (QueryAllGeneralKeyShareRequest) returns (QueryAllGeneralKeyShareResponse) {
    option (google.api.http).get = "/fairyring/keyshare/general_key_share";
  
  }
}

message QueryCommitmentsRequest {}

message QueryCommitmentsResponse {
    Commitments activeCommitments = 1;
    Commitments queuedCommitments = 2;
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetValidatorSetRequest {
  string index = 1;
}

message QueryGetValidatorSetResponse {
  ValidatorSet validatorSet = 1 [(gogoproto.nullable) = false];
}

message QueryAllValidatorSetRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllValidatorSetResponse {
  repeated ValidatorSet                           validatorSet = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

message QueryGetKeyShareRequest {
  string validator   = 1;
  uint64 blockHeight = 2;
}

message QueryGetKeyShareResponse {
  KeyShare keyShare = 1 [(gogoproto.nullable) = false];
}

message QueryAllKeyShareRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllKeyShareResponse {
  repeated KeyShare                               keyShare   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
message QueryGetAggregatedKeyShareRequest {
  uint64 height = 1;
}

message QueryGetAggregatedKeyShareResponse {
  AggregatedKeyShare aggregatedKeyShare = 1 [(gogoproto.nullable) = false];
}

message QueryAllAggregatedKeyShareRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAggregatedKeyShareResponse {
  repeated AggregatedKeyShare                     aggregatedKeyShare = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination         = 2;
}

message QueryPubKeyRequest {}

message QueryPubKeyResponse {
  ActivePubKey activePubKey = 1 [(gogoproto.nullable) = false];
  QueuedPubKey queuedPubKey = 2 [(gogoproto.nullable) = false];
}

message QueryGetAuthorizedAddressRequest {
  string target = 1;
}

message QueryGetAuthorizedAddressResponse {
  AuthorizedAddress authorizedAddress = 1 [(gogoproto.nullable) = false];
}

message QueryAllAuthorizedAddressRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllAuthorizedAddressResponse {
  repeated AuthorizedAddress                      authorizedAddress = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination        = 2;
}

message QueryGetGeneralKeyShareRequest {
  string validator = 1;
  string idType    = 2;
  string idValue   = 3;
}

message QueryGetGeneralKeyShareResponse {
  GeneralKeyShare generalKeyShare = 1 [(gogoproto.nullable) = false];
}

message QueryAllGeneralKeyShareRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGeneralKeyShareResponse {
  repeated GeneralKeyShare                        generalKeyShare = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination      = 2;
}

