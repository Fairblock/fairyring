syntax = "proto3";
package fairyring.common;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Fairblock/fairyring/x/common/types";

// RequestDecryptionKey defines a struct for the data payload
message RequestDecryptionKey {
  string creator = 1;
  // id can either be a identity or a proposal id
  oneof id {
    string proposal_id = 2;
    string identity = 3;
  }
  google.protobuf.Duration estimated_delay = 4 [(gogoproto.stdduration) = true];
}

// RequestDecryptionKeyResponse defines the response to the RequestDecryptionKey message
message RequestDecryptionKeyResponse {
  string identity = 1;
  string pubkey = 2;
}

// GetDecryptionKey defines a struct for the data payload
message GetDecryptionKey {
  bool is_governance_proposal = 1;
  string proposal_id = 2;
  string identity = 3;
}

// GetDecryptionKeyResponse defines the response to the GetDecryptionKey message
message GetDecryptionKeyResponse {}

// GetPrivateDecryptionKey defines a struct for the data payload
message GetPrivateDecryptionKey {
  string identity = 1;
  string requester = 2;
  string secp_pubkey = 3;
}

// GetPrivateDecryptionKeyResponse defines the response to the GetPrivateDecryptionKey message
message GetPrivateDecryptionKeyResponse {
  string pubkey = 1;
}

// ActivePublicKey defines the pubkey currently in use
message ActivePublicKey {
  string public_key = 1;
  string creator = 2;
  uint64 expiry = 3;
}

// QueuedPublicKey defines the pubkey that (when set) will replace the acive pubkey
// when it expires
message QueuedPublicKey {
  string public_key = 1;
  string creator = 2;
  uint64 expiry = 3;
}

// RequestPrivateDecryptionKey defines the structure to request for
// encrypted and unaggregated keyshares
message RequestPrivateDecryptionKey {
  string creator = 1;
  string identity = 2;
}

// PrivateDecryptionKey defines the storage structure for
// the list of encrypted keyshares (unaggregated)
message PrivateDecryptionKey {
  string requester = 1;
  repeated IndexedEncryptedKeyshare private_keyshares = 2;
}

// IndexedEncryptedKeyshare defines the storage of submitted encrypted
// keyshares along with their indices (can be decrypted and aggregated)
message IndexedEncryptedKeyshare {
  string encrypted_keyshare_value = 1;
  uint64 encrypted_keyshare_index = 2;
}

message Bid {
  string bidder = 1;
  string sealed_bid = 2;
}

message DecryptedBid {
  string bidder = 1;
  cosmos.base.v1beta1.Coin bid = 3;
}

message AuctionDetail {
  string creator = 1;
  string identity = 2;
  string pubkey = 3;
  uint64 auction_id = 4;
  uint64 resolve_at = 5;
  repeated Bid bids = 6;
  repeated DecryptedBid decrypted_bids = 7;
  bool is_timed = 8;
  bool is_resolved = 9;
  DecryptedBid winning_bid = 10;
  string fail_reason = 11;
  string bid_denom = 12;
}

message AuctionDetailList {
  repeated AuctionDetail auction_detail = 1 [(gogoproto.nullable) = false];
}

message QueuedAuctionDecryption {
  AuctionDetail auction_detail = 1;
}

message Bidder {
  string address = 1;
  cosmos.base.v1beta1.Coin delegated = 2;
  bool active = 3;
}